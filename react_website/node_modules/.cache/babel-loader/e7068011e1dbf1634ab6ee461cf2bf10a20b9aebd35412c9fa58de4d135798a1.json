{"ast":null,"code":"var _jsxFileName = \"/Users/Maximus/Documents/react_website/src/PageNavBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomLink from './CustomLink';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PageNavBar(_ref) {\n  _s();\n  let {\n    unit,\n    currIndex,\n    pageList,\n    topics\n  } = _ref;\n  const [pageIndex, setPageIndex] = useState(currIndex);\n\n  // define event handlers \n  const goBack = () => {\n    setPageIndex(prevIndex => prevIndex - 1);\n  };\n  const goNext = () => {\n    setPageIndex(prevIndex => prevIndex + 1);\n  };\n\n  // determine if on the first question or not \n  const onFirstPage = pageIndex === 1;\n  const onLastPage = pageIndex === pageList.length;\n  let backButton = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  let nextButton = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  if (!onFirstPage) {\n    backButton = /*#__PURE__*/_jsxDEV(Link, {\n      to: `/unit${unit}/${pageIndex - 1}`,\n      className: \"prevPage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        children: topics[pageIndex - 1 - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this);\n  }\n  if (!onLastPage) {\n    nextButton = /*#__PURE__*/_jsxDEV(Link, {\n      to: `/unit${unit}/${pageIndex + 1}`,\n      className: \"nextPage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goNext,\n        children: [topics[pageIndex + 1 - 1], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [backButton, nextButton]\n  }, void 0, true);\n}\n_s(PageNavBar, \"T4v+Vb09VlybkUPHQe3eS6Dzh/U=\");\n_c = PageNavBar;\nexport default PageNavBar;\nvar _c;\n$RefreshReg$(_c, \"PageNavBar\");","map":{"version":3,"names":["React","useState","Link","CustomLink","Fragment","_Fragment","jsxDEV","_jsxDEV","PageNavBar","_ref","_s","unit","currIndex","pageList","topics","pageIndex","setPageIndex","goBack","prevIndex","goNext","onFirstPage","onLastPage","length","backButton","nextButton","to","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Maximus/Documents/react_website/src/PageNavBar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomLink from './CustomLink';\n\nfunction PageNavBar({ unit, currIndex, pageList, topics }) {\n    const [pageIndex, setPageIndex] = useState(currIndex);\n\n    // define event handlers \n    const goBack = () => {\n        setPageIndex(prevIndex => prevIndex - 1);\n    };\n\n    const goNext = () => {\n        setPageIndex(prevIndex => prevIndex + 1);\n    };\n\n    // determine if on the first question or not \n    const onFirstPage = pageIndex === 1;\n    const onLastPage = pageIndex === pageList.length;\n\n    let backButton = <></>;\n    let nextButton = <></>;\n    if (!onFirstPage) {\n        backButton = (<Link to={`/unit${unit}/${pageIndex-1}`} className=\"prevPage\">\n            <button onClick={goBack}>{topics[(pageIndex - 1) - 1]}</button>\n        </Link>)\n    }\n    if(!onLastPage){\n        nextButton = (<Link to={`/unit${unit}/${pageIndex + 1}`} className=\"nextPage\">\n            <button onClick={goNext}>{topics[(pageIndex + 1) - 1]} </button>\n        </Link>)\n    }\n\n    return (\n        <>\n            {backButton}\n            {nextButton}\n        </>\n    );\n}\nexport default PageNavBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,UAAUA,CAAAC,IAAA,EAAwC;EAAAC,EAAA;EAAA,IAAvC;IAAEC,IAAI;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAAL,IAAA;EACrD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAACW,SAAS,CAAC;;EAErD;EACA,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACjBD,YAAY,CAACE,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBH,YAAY,CAACE,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAME,WAAW,GAAGL,SAAS,KAAK,CAAC;EACnC,MAAMM,UAAU,GAAGN,SAAS,KAAKF,QAAQ,CAACS,MAAM;EAEhD,IAAIC,UAAU,gBAAGhB,OAAA,CAAAF,SAAA,mBAAI,CAAC;EACtB,IAAImB,UAAU,gBAAGjB,OAAA,CAAAF,SAAA,mBAAI,CAAC;EACtB,IAAI,CAACe,WAAW,EAAE;IACdG,UAAU,gBAAIhB,OAAA,CAACL,IAAI;MAACuB,EAAE,EAAG,QAAOd,IAAK,IAAGI,SAAS,GAAC,CAAE,EAAE;MAACW,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvEpB,OAAA;QAAQqB,OAAO,EAAEX,MAAO;QAAAU,QAAA,EAAEb,MAAM,CAAEC,SAAS,GAAG,CAAC,GAAI,CAAC;MAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAE;EACZ;EACA,IAAG,CAACX,UAAU,EAAC;IACXG,UAAU,gBAAIjB,OAAA,CAACL,IAAI;MAACuB,EAAE,EAAG,QAAOd,IAAK,IAAGI,SAAS,GAAG,CAAE,EAAE;MAACW,SAAS,EAAC,UAAU;MAAAC,QAAA,eACzEpB,OAAA;QAAQqB,OAAO,EAAET,MAAO;QAAAQ,QAAA,GAAEb,MAAM,CAAEC,SAAS,GAAG,CAAC,GAAI,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAE;EACZ;EAEA,oBACIzB,OAAA,CAAAF,SAAA;IAAAsB,QAAA,GACKJ,UAAU,EACVC,UAAU;EAAA,eACb,CAAC;AAEX;AAACd,EAAA,CAnCQF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}